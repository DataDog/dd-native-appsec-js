name: Build

on:
  push:
    branches: [ main, julio/node-gyp-issue ]
  pull_request:
    branches: [ main ]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  download-libddwaf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm install --ignore-scripts
      - run: node scripts/setup
      - uses: actions/upload-artifact@v3
        with:
          name: libddwaf
          path: libddwaf/**/*

  build:
    needs: download-libddwaf
    uses: Datadog/action-prebuildify/.github/workflows/build.yml@54617be1fe8f47ae54221da42f6bbc1980917f2c
    with:
      cache: false
      napi: true
      package-manager: 'npm'
      postbuild: 'alias node-gyp=/opt/node-v12.0.0-linux-x64/lib/node_modules/npm/bin/node-gyp-bin/node-gyp && node scripts/postbuild'
      skip: 'linux-arm linux-ia32'
      target-name: 'appsec'

  static-checks:
    strategy:
      matrix:
        run:
          - lint
          - licenses
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm ci
      - run: npm run ${{ matrix.run }}

  cpp-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - run: pip install cpplint
      - run: cpplint --linelength=120 --recursive ./src
