name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  download-libddwaf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm install --ignore-scripts
      - run: node scripts/setup
      - uses: actions/upload-artifact@v4
        with:
          name: libddwaf
          path: libddwaf/**/*

  build:
    needs: download-libddwaf
    uses: Datadog/action-prebuildify/.github/workflows/build.yml@main
    with:
      cache: true
      napi: true
      package-manager: 'npm'
      postbuild: 'node scripts/postbuild'
      skip: 'linux-arm,linux-ia32'
      target-name: 'appsec'
      min-node-version: 16

  pack:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: prebuilds
      - run: ls -lha
      - run: npm pack
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/upload-artifact@v4
        with:
          name: datadog-native-appsec-${{ steps.package.outputs.version }}.tgz
          path: datadog-native-appsec-${{ steps.package.outputs.version }}.tgz

  static-checks:
    strategy:
      matrix:
        run:
          - lint
          - licenses
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm ci
      - run: npm run ${{ matrix.run }}

  cpp-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - run: pip install cpplint
      - run: cpplint --linelength=120 --recursive ./src
