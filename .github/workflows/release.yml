name: Release

on:
  - push

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  download-libddwaf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm install --ignore-scripts
      - run: node scripts/setup
      - uses: actions/upload-artifact@v3
        with:
          name: libddwaf
          path: libddwaf/**/*

  build:
    needs: download-libddwaf
    uses: Datadog/action-prebuildify/.github/workflows/build.yml@main
    with:
      cache: true
      napi: true
      package-manager: 'npm'
      postbuild: 'node scripts/postbuild'
      skip: 'linux-arm linux-ia32'
      target-name: 'appsec'

  pack:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - run: npm pack
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/upload-artifact@v3
        with:
          name: datadog-native-appsec-${{ steps.package.outputs.version }}.tgz
          path: datadog-native-appsec-${{ steps.package.outputs.version }}.tgz

  publish:
    needs: pack
    runs-on: ubuntu-latest
    environment: npm
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/download-artifact@v3
        with:
          name: datadog-native-appsec-${{ steps.package.outputs.version }}.tgz
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: npm version
      - run: npm publish ./datadog-native-appsec-${{ steps.package.outputs.version }}.tgz --dry-run --provenance
