name: Release

on:
  push:
    branches:
      - julio/automatic-release
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  download-libddwaf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm install --ignore-scripts
      - run: node scripts/setup
      - uses: actions/upload-artifact@v3
        with:
          name: libddwaf
          path: libddwaf/**/*

  build:
    needs: download-libddwaf
    uses: Datadog/action-prebuildify/.github/workflows/build.yml@main
    with:
      cache: true
      napi: true
      package-manager: 'npm'
      postbuild: 'node scripts/postbuild'
      skip: 'linux-arm linux-ia32'
      target-name: 'appsec'

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: npm
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish --dry-run
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      # - run: |
      #     git tag v${{ steps.package.outputs.version }}
      #     git push origin v${{ steps.package.outputs.version }}

  create_release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - run: ls -l
      - uses: actions/checkout@v3
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: Release ${{ steps.package.outputs.version }}
          body: |
            Test release
          draft: false
          prerelease: false
      # - uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./datadog-native-iast-taint-tracking-${{ steps.package.outputs.version }}.tgz
      #     asset_name: datadog-native-iast-taint-tracking-${{ steps.package.outputs.version }}
      #     asset_content_type: application/tar+gzip
